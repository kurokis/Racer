# Jetpack 4.5.1と互換性を保つにはTensorRT 7.1.3が必要なので20.09をインストールする
FROM nvcr.io/nvidia/tensorrt:21.06-py3
#FROM nvidia/cuda:11.4.2-cudnn8-devel-ubuntu20.04
#FROM ubuntu:20.04

#### Misc ####
# set environment variable to stop the following warning from appearing
# when using apt-get in Dockerfile:
# "debconf: delaying package configuration, since apt-utils is not installed"
ENV DEBCONF_NOWARNINGS=yes

### Python ####
RUN apt-get update && apt-get install -y python3 python3-pip

#### ROS2 foxy ####
ENV DEBIAN_FRONTEND noninteractive

ENV ROS_DISTRO foxy
# ロケールのセットアップ
RUN apt-get update && apt-get install -y locales && \
    dpkg-reconfigure locales && \
    locale-gen ja_JP ja_JP.UTF-8 && \
    update-locale LC_ALL=ja_JP.UTF-8 LANG=ja_JP.UTF-8
ENV LC_ALL   ja_JP.UTF-8
ENV LANG     ja_JP.UTF-8
ENV LANGUAGE ja_JP.UTF-8

# APTソースリストの設定
RUN apt-get update && \
    apt-get install -y curl gnupg2 lsb-release && \
    curl http://repo.ros2.org/repos.key | apt-key add - && \
    sh -c 'echo "deb [arch=amd64,arm64] http://packages.ros.org/ros2/ubuntu \
    `lsb_release -cs` main" > /etc/apt/sources.list.d/ros2-latest.list' && \
    apt-get update

# ROS2パッケージのインストール
RUN export ROS_DISTRO=foxy && \
    apt-get install -y ros-$ROS_DISTRO-desktop \
    python3-colcon-common-extensions python3-rosdep python3-argcomplete && \
    rosdep init && \
    rosdep update

# source setup.bash
RUN echo "source /opt/ros/$ROS_DISTRO/setup.bash" >> ~/.bashrc

#### Gazebo for ROS2 foxy ####
## [How to install Gazebo](http://gazebosim.org/tutorials?tut=ros2_installing&cat=connect_ros)
RUN apt update && apt install -y ros-foxy-gazebo-ros-pkgs
RUN apt-get update && apt-get install -y mesa-utils

# nvidia-container-runtime (needed for running Gazebo)
ENV NVIDIA_VISIBLE_DEVICES \
    ${NVIDIA_VISIBLE_DEVICES:-all}
ENV NVIDIA_DRIVER_CAPABILITIES \
    ${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}graphics

#### rqt for ROS2 foxy ####
#RUN apt update && apt install -y ~nros-foxy-rqt*

## Dockerコンテナ上でkillallを使えるようにする
RUN apt install -y psmisc

## Install xterm, pip, pygame, numpy, pytorch
RUN apt-get update && apt-get install -y xterm
RUN python3 -m pip install pygame numpy matplotlib scipy jupyterlab pandas pillow
RUN python3 -m pip install torch torchvision torchaudio torchsummary

#### torch2trt ####
RUN git clone https://github.com/NVIDIA-AI-IOT/torch2trt
RUN cd torch2trt && python3 setup.py install --plugins

WORKDIR /app
